FROM golang:latest AS builder

WORKDIR /usr/src/app

COPY main.go /usr/src/app/main.go

RUN go mod init "{{ .Package.Name }}" && \
    go mod tidy && \
    go get github.com/choria-io/asyncjobs@{{ .Package.AJVersion }} && \
    go mod download

RUN go build -v -o /app -ldflags="-s -w"

FROM alpine:latest

RUN mkdir /lib64 && \
    ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2 && \
    apk --no-cache add ca-certificates && \
    mkdir -p /handler/config

COPY --from=builder /app /handler/app

EXPOSE 8080/tcp

ENV XDG_CONFIG_HOME "/handler/config"
ENV AJ_WORK_QUEUE "{{ .Package.WorkQueue }}"
{{- if .Package.ContextName }}
ENV AJ_NATS_CONTEXT "{{ .Package.ContextName }}"
{{- else }}
ENV AJ_NATS_CONTEXT "AJ"
{{- end }}

ENTRYPOINT ["/handler/app"]
